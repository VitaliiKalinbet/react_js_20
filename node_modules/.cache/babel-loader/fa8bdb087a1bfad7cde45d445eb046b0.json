{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/bosssvit/projects/react_js_20/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/bosssvit/projects/react_js_20/src/components/Values.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: inline-flex;\\n  justify-content: space-between;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport * as budgetAppSelectors from \"../redux/budgetApp/budgetAppSelectors\";\nimport Value from \"./Value\";\nvar Container = styled.section(_templateObject()); // const calculateBalance = (budget, expenses) => budget - expenses;\n// const calculateTotalExpenses = expenses => {\n//   return expenses.reduce((total, expense) => total + expense.amount, 0);\n// };\n\nvar Values = function Values(_ref) {\n  var budget = _ref.budget,\n      expenses = _ref.expenses,\n      balance = _ref.balance;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Value, {\n    label: \"Budget\",\n    value: budget,\n    isPositive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Value, {\n    label: \"Expenses\",\n    value: expenses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Value, {\n    label: \"Balance\",\n    value: balance,\n    isPositive: balance >= 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    budget: budgetAppSelectors.getBudget(store),\n    expenses: budgetAppSelectors.getTotalExpenses(store),\n    balance: budgetAppSelectors.getBalance(store)\n  };\n};\n\nexport default connect(mapStateToProps, null)(Values);","map":{"version":3,"sources":["/Users/bosssvit/projects/react_js_20/src/components/Values.js"],"names":["React","styled","connect","budgetAppSelectors","Value","Container","section","Values","budget","expenses","balance","mapStateToProps","store","getBudget","getTotalExpenses","getBalance"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,kBAAZ,MAAoC,uCAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,SAAS,GAAGJ,MAAM,CAACK,OAAV,mBAAf,C,CAMA;AAEA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAmC;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAChD,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAEF,MAA7B;AAAqC,IAAA,UAAU,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,KAAK,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAEC,OAA9B;AAAuC,IAAA,UAAU,EAAEA,OAAO,IAAI,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CARD;;AAUA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCJ,IAAAA,MAAM,EAAEL,kBAAkB,CAACU,SAAnB,CAA6BD,KAA7B,CADwB;AAEhCH,IAAAA,QAAQ,EAAEN,kBAAkB,CAACW,gBAAnB,CAAoCF,KAApC,CAFsB;AAGhCF,IAAAA,OAAO,EAAEP,kBAAkB,CAACY,UAAnB,CAA8BH,KAA9B;AAHuB,GAAL;AAAA,CAA7B;;AAMA,eAAeV,OAAO,CAACS,eAAD,EAAkB,IAAlB,CAAP,CAA+BJ,MAA/B,CAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport * as budgetAppSelectors from \"../redux/budgetApp/budgetAppSelectors\";\r\nimport Value from \"./Value\";\r\n\r\nconst Container = styled.section`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n// const calculateBalance = (budget, expenses) => budget - expenses;\r\n\r\n// const calculateTotalExpenses = expenses => {\r\n//   return expenses.reduce((total, expense) => total + expense.amount, 0);\r\n// };\r\n\r\nconst Values = ({ budget, expenses, balance }) => {\r\n  return (\r\n    <Container>\r\n      <Value label=\"Budget\" value={budget} isPositive />\r\n      <Value label=\"Expenses\" value={expenses} />\r\n      <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  budget: budgetAppSelectors.getBudget(store),\r\n  expenses: budgetAppSelectors.getTotalExpenses(store),\r\n  balance: budgetAppSelectors.getBalance(store)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Values);\r\n"]},"metadata":{},"sourceType":"module"}